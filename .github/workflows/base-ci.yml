name: basic-steps

on:
  workflow_call:

jobs:

  build-and-check:
    runs-on: ubuntu-latest

    env:
      gradle_cmd: "./gradlew --parallel --console=plain --no-watch-fs -s "

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build & Test
        run: ${gradle_cmd} check detektMain detektTest :koverXmlReport --rerun

      - name: Run Delta Coverage check
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: ${{ contains(github.event.pull_request.labels.*.name, 'suppress-delta-coverage') }}
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF" -x test -x functionalTest

      - name: Append Delta Coverage Summary
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        run: |
          cat build/reports/coverage-reports/delta-coverage/report.md >> $GITHUB_STEP_SUMMARY
          echo '---' >> $GITHUB_STEP_SUMMARY

      - name: Add Delta Coverage report to PR
        id: coverage-in-PR
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        uses: madrapps/jacoco-report@v1.6.1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          paths:
            'build/reports/coverage-reports/delta-coverage/report.xml'

      - name: Add test results to PR
        uses: EnricoMi/publish-unit-test-result-action@v2.16.1
        if: ${{ github.event_name == 'pull_request' && ( success() || failure() ) }}
        continue-on-error: true
        with:
          files:
            '**/build/test-results/*/TEST-*.xml'

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: build/reports/kover/report.xml
